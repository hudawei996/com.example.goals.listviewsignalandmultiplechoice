package com.example.goals.listviewsignalandmultiplechoice;import android.app.ActivityManager;import android.app.Service;import android.content.Context;import android.content.Intent;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.Log;import android.widget.Toast;import java.util.List;public class BaseActivity extends AppCompatActivity {    public boolean shouldGotoLaunch = false;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);    }    @Override    protected void onPause() {        super.onPause();        //如果我检测到是在后台，一分钟1.5s后，没启动过自动设置为需要显示Launch页面        /*if (!isAppForeground(this)) {            new Thread(new Runnable() {                @Override                public void run() {                    try {                        Thread.sleep(1500);                    } catch (InterruptedException e) {                        e.printStackTrace();                    } finally {                        shouldGotoLaunch = true;                    }                }            }).run();        }*/    }    @Override    protected void onResume() {        super.onResume();        /*if (shouldGotoLaunch && isAppForeground(this)) {            startActivity(new Intent(getBaseContext(), LaunchActivity.class));        }*/    }    /**     * 判断app是否处于前台     *     * @param context     * @return     */    public static boolean isAppForeground(Context context) {        ActivityManager activityManager = (ActivityManager) context.getSystemService(Service.ACTIVITY_SERVICE);        List<ActivityManager.RunningAppProcessInfo> runningAppProcessInfoList = activityManager.getRunningAppProcesses();        if (runningAppProcessInfoList == null) {            return false;        }        for (ActivityManager.RunningAppProcessInfo processInfo : runningAppProcessInfoList) {            if (processInfo.processName.equals(context.getPackageName()) &&                    processInfo.importance == ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND) {                return true;            }        }        return false;    }}